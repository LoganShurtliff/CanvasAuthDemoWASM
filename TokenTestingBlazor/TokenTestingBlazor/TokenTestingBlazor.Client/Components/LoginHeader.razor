@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

@inject CookieStorageAccessor cookie

<div class="top-row px-4">
    
    @if (Loaded)
    {
       @if (LoggedIn)
       {
            <a href="logout">Logout</a>   
       } 
       else
       {
            <a href="login">Login</a>
       }
    }
    else
    {
        <p>Loading...</p>
    }
</div>

<article class="content px-4">
    @ChildContent
</article>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    private bool LoggedIn { get; set; }
    private bool Loaded { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        string? canvasToken = await cookie.GetValueAsync<string>("canvas_access_token");
        string? azureToken = await cookie.GetValueAsync<string>("azure_access_token");

        if (canvasToken != null && azureToken != null)
        {
            LoggedIn = true;
        } 
        else
        {
            LoggedIn = false;
        }

        Loaded = true;
    }
}
